apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/securesign/rekor?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "main" && ( "Dockerfile.backfill-redis.rh".pathChanged() || ".tekton/backfill-redis-pull-request.yaml".pathChanged()
      || "trigger-konflux-builds.txt".pathChanged() || "go.mod".pathChanged() || "go.sum".pathChanged()
      || "cmd/backfill-redis".pathChanged() || "pkg".pathChanged() || "Makefile".pathChanged()
      )
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: rekor
    appstudio.openshift.io/component: backfill-redis
    pipelines.appstudio.openshift.io/type: build
  name: backfill-redis-on-pull-request
  namespace: rhtas-tenant
spec:
  params:
  - name: dockerfile
    value: Dockerfile.backfill-redis.rh
  - name: git-url
    value: '{{repo_url}}'
  - name: image-expires-after
    value: 5d
  - name: output-image
    value: quay.io/securesign/rekor-backfill-redis:on-pr-{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  - name: build-source-image
    value: "true"
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: '[{"path":".","type":"gomod"},{"path":"./hack/tools","type":"gomod"}]'
  - name: go_unit_test
    value: "true"
  - name: go_base_image
    value: brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_9_1.23@sha256:44fd8f88f3b6463cda15571260f9ca3a0b78d3c8c8827a338e04ab3a23581a88
  pipelineRef:
    params:
    - name: url
      value: https://github.com/securesign/pipelines.git
    - name: revision
      value: main
    - name: pathInRepo
      value: pipelines/docker-build-oci-ta.yaml
    resolver: git
  taskRunSpecs:
  - pipelineTaskName: prefetch-dependencies
    stepSpecs:
    - computeResources:
        limits:
          cpu: "3"
          memory: 3Gi
        requests:
          cpu: "3"
          memory: 3Gi
      name: prefetch-dependencies
  taskRunTemplate:
    serviceAccountName: build-pipeline-backfill-redis
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
